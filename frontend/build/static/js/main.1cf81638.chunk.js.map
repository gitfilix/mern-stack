{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","remainingExpirationTimeString","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","console","log","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.1cf81638.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n})\n\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react'\n\n\n// 'behind the scenes -variable' logoutTimer\nlet logoutTimer\n\nexport const useAuth = () => {\n\n  const [token, setToken] = useState(false)\n  const [tokenExpirationDate, setTokenExpirationDate] = useState()\n  const [userId, setUserId] = useState(false)\n\n  // run that only on initial load dep-arry: []\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token)\n    setUserId(uid)\n    // remainingExpirationTimeString + now + 1h or valid expiration date from props\n    const remainingExpirationTimeString = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60)\n\n    setTokenExpirationDate(tokenExpirationDate)\n    // localstorage set uid and token\n    localStorage.setItem('userData', JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: remainingExpirationTimeString.toISOString()\n    })\n    )\n  }, [])\n\n  const logout = useCallback(() => {\n    setToken(null)\n    setTokenExpirationDate(null)\n    setUserId(null)\n    localStorage.removeItem('userData')\n  }, [])\n\n  // logout timer hook \n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      // check if tokenExpirationDate is still valid \n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime()\n      // again behind the scene variable logoutTimer\n      logoutTimer = setTimeout(logout, remainingTime)\n      console.log('logoutTimer', logoutTimer)\n    } else {\n      clearTimeout(logoutTimer)\n    }\n  }, [token, logout, tokenExpirationDate])\n\n  // useEffect runs always After (the first) render-cycle\n  // if stored.data for user id -> execute login function\n  useEffect(() => {\n    // read the localstorage\n    const storedData = JSON.parse(localStorage.getItem('userData'))\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration))\n    }\n  }, [login])\n\n  // return token data, userId login and logout state\n  return { token, login, logout, userId }\n}","import React from 'react'\nimport './MainHeader.css'\n\n\nconst MainHeader = props => {\n  return (\n  <header className='main-header'>\n    {props.children}\n  </header>\n  )\n}\n\nexport default MainHeader","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { AuthContext } from '../../context/auth-context'\n\nimport './NavLinks.css'\n\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext)\n\n  return <ul className='nav-links'>\n    <li>\n      <NavLink to='/' exact>All users</NavLink>\n    </li>\n    {auth.isLoggedIn && (\n    <li>\n      <NavLink to={`/${auth.userId}/places`}>my Places</NavLink>\n    </li>\n    )}\n    {auth.isLoggedIn && (\n    <li>\n      <NavLink to='/places/new'>Add a Place</NavLink>\n    </li>\n    )}\n    {!auth.isLoggedIn && (\n    <li>\n      <NavLink to='/auth'>Authenticate</NavLink>\n    </li>\n    )}\n    {auth.isLoggedIn && (\n      <li>\n        <button onClick={auth.logout}>Logout</button>\n      </li>\n    )}\n  </ul>\n}\n\nexport default NavLinks","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\nimport './SideDrawer.css'\n\nconst SideDrawer = (props) => {\n  const content =  (\n    <CSSTransition \n      in={props.show} \n      timeout={200} \n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n      >\n      <aside className='side-drawer' onClick={props.onClick} >{props.children}</aside>\n    </CSSTransition>\n  )\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook')) \n}\n\nexport default SideDrawer","import React, { useState } from 'react'\nimport MainHeader from './MainHeader'\nimport { Link } from 'react-router-dom'\nimport NavLinks from './NavLinks'\nimport SideDrawer from './SideDrawer'\nimport Backdrop from '../UIElements/Backdrop'\n\nimport './MainNavigation.css'\n\n\nconst MainNavigation = props => {\n  // hook useState\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false)\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true)\n  }\n\n  const closeDrawerHandler = ()=> {\n    setDrawerIsOpen(false)\n  }\n\n  return (\n    <>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} /> }\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n          <nav className='main-navigation__drawer-nav'>\n            <NavLinks />\n          </nav>\n      </SideDrawer>\n\n    <MainHeader>\n      <button className='main-navigation__menu-btn' onClick={openDrawerHandler}>\n        <span />\n        <span />\n        <span />\n      </button>\n      <h1 className='main-navigation__title'>\n      <Link to='/'>\n        Home Sweet Home\n      </Link>\n      </h1>\n      <nav className='main-navigation__header-nav'>\n        <NavLinks />\n      </nav>\n    </MainHeader>\n    </>\n  )\n}\n\nexport default MainNavigation","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from './shared/context/auth-context'\nimport { useAuth } from './shared/hooks/auth-hook'\n\n// code splitting by lazy loading imports\nconst Users = React.lazy(() => import('./user/pages/Users'))\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'))\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'))\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'))\nconst Auth = React.lazy(() => import('./user/pages/Auth'))\n\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth()\n  console.log('token', token)\n  // routes for logged-in or not\n  let routes\n\n  if (token) {\n    routes = (\n      // loged in (private)\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  } else {\n    // not logged in (public)\n    routes = (\n       <Switch >\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    )\n  }\n\n  return (\n    <AuthContext.Provider \n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }} \n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={\n            <div className='center'>\n              <LoadingSpinner />\n            </div>\n            }>\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}